/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.custos.tenant.management.service;

import "google/api/annotations.proto";
import "TenantProfileService.proto";



message CreateTenantRequest {
    org.apache.custos.tenant.profile.service.Tenant tenant = 1;
}


message CreateTenantResponse {
    int64 tenantId = 1;
    string clientId = 2;
    string clientSecret = 3;
    string msg = 4;
}

message UpdateStatusRequest {
    org.apache.custos.tenant.profile.service.UpdateStatusRequest status= 1;
}


message UpdateTenantRequest {
    org.apache.custos.tenant.profile.service.UpdateTenantRequest request= 1;
}

message GetCredentialsRequest {
    int64  tenantId = 1;
}

message GetCredentialsResponse {
     string iamClientId = 1;
     string iamClientSecret = 2;
     string ciLogonClientId = 3;
     string ciLogonClientSecret = 4;
}

service TenantManagementService {

    rpc createTenant (CreateTenantRequest) returns (CreateTenantResponse) {
        option (google.api.http) = {
           post: "/tenant-management/v1.0.0/tenant"
           body: "tenant"
         };
    }

    rpc updateTenant (UpdateTenantRequest) returns (org.apache.custos.tenant.profile.service.UpdateTenantResponse) {
        option (google.api.http) = {
           put: "/tenant-management/v1.0.0/tenant"
           body: "request"
        };
    }

    rpc getCredentials (GetCredentialsRequest) returns (GetCredentialsResponse) {
        option (google.api.http) = {
           get: "/tenant-management/v1.0.0/credentials"
        };
    }



    rpc getTenant (org.apache.custos.tenant.profile.service.GetTenantRequest) returns (org.apache.custos.tenant.profile.service.GetTenantResponse) {
        option (google.api.http) = {
           get: "/tenant-management/v1.0.0/tenant/{tenantId}"
        };
    }

    rpc updateTenantStatus (UpdateStatusRequest) returns (org.apache.custos.tenant.profile.service.UpdateStatusResponse) {
        option (google.api.http) = {
           post: "/tenant-management/v1.0.0/status"
           body: "status"
        };
    }

    rpc getAllTenants (org.apache.custos.tenant.profile.service.Empty) returns (org.apache.custos.tenant.profile.service.GetAllTenantsResponse) {
        option (google.api.http) = {
           get: "/tenant-management/v1.0.0/tenants"
        };
    }

    rpc getAllTenantsForUser (org.apache.custos.tenant.profile.service.GetAllTenantsForUserRequest) returns (org.apache.custos.tenant.profile.service.GetAllTenantsForUserResponse) {
        option (google.api.http) = {
           get: "/tenant-management/v1.0.0/tenants/{requesterUserName}"
        };
    }
    rpc getTenantStatusUpdateAuditTrail (org.apache.custos.tenant.profile.service.GetAuditTrailRequest) returns (org.apache.custos.tenant.profile.service.GetStatusUpdateAuditTrailResponse) {
        option (google.api.http) = {
           get: "/tenant-management/v1.0.0/audit/status/{tenantId}"
        };
    }
    rpc getTenantAttributeUpdateAuditTrail (org.apache.custos.tenant.profile.service.GetAuditTrailRequest) returns (org.apache.custos.tenant.profile.service.GetAttributeUpdateAuditTrailResponse) {
        option (google.api.http) = {
           get: "/tenant-management/v1.0.0/audit/attributes/{tenantId}"
        };
    }


}