/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *
 */

syntax = "proto3";

option java_multiple_files = true;
package org.apache.custos.credential.store.service;

enum Type {
    CUSTOS = 0;
    IAM = 1;
    CILOGON = 2;
    INDIVIDUAL = 3;
}
message CredentialMetadata {
    int64 ownerId = 1;
    string id = 2;
    string secret = 3;
    Type type = 4;
}

message GetCredentialsRequest {
    int64 ownerId = 1;
    string id = 2;
    Type type = 3;
}

message GetAllCredentialsRequest {
    int64 ownerId = 1;
}

message GetAllCredentialsResponse {
    repeated CredentialMetadata secretList = 1;
}

message OperationStatus {
    bool state = 1;
}

message DeleteCredentialRequest {
    int64 ownerId = 1;
    Type type = 2;
}

message GetOperationsMetadataRequest {
    int64 traceId = 1;
}

message OperationMetadata {
    string event = 1;
    string status = 2;
    string timeStamp = 3;
    string performedBy = 4;
}
message GetOperationsMetadataResponse {
    repeated OperationMetadata metadata = 1;
}

message GetNewCustosCredentialRequest {
    int64 ownerId = 1;
}

message GetNewCustosCredentialResponse {
    string clientId = 1;
    string clientSecret = 2;
}


service CredentialStoreService {
    rpc putCredential (CredentialMetadata) returns (OperationStatus);
    rpc deleteCredential (DeleteCredentialRequest) returns (OperationStatus);
    rpc getCredential (GetCredentialsRequest) returns (CredentialMetadata);
    rpc getAllCredentials (GetAllCredentialsRequest) returns (GetAllCredentialsResponse);
    rpc getOperationMetadata (GetOperationsMetadataRequest) returns (GetOperationsMetadataResponse);
    rpc getNewCustosCredential (GetNewCustosCredentialRequest) returns (GetNewCustosCredentialResponse);
}